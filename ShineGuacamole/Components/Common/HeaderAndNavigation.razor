<!--
//
// Copyright 2024 Gurpreet Raju
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
-->

@using Microsoft.AspNetCore.Components.Authorization
@using ShineGuacamole.Shared
@using ShineGuacamole.Shared.Models

<PageTitle>@AppBarContentProvider.PageTitle</PageTitle>
<MudAppBar>
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    <MudText Typo="Typo.h5">@ApplicationName</MudText>
    <MudText Class="ml-3">@AppBarContentProvider.PageTitle</MudText>
    <MudSpacer />
    @RenderActions(AppBarContentProvider.Actions)
</MudAppBar>
<MudDrawer @bind-Open="_drawerOpen" OpenMiniOnHover="true" Variant="DrawerVariant.Mini" Elevation="2" 
            ClipMode="DrawerClipMode.Always" Fixed="true">
    <MudNavMenu>
        @foreach (var action in _navItems)
        {
            <MudNavLink Href="@action.Href" Icon="@action.Icon" Match="action.Match">@action.Text</MudNavLink>
        }
    </MudNavMenu>
    <MudSpacer />
    <MudStack Spacing="1" Justify="Justify.Center" Class="drawer-footer">
        <MudStack Spacing="1" Row="_drawerOpen" AlignItems="AlignItems.Center" Justify="Justify.Center" Class="px-2">
            <MudIconButton Variant="Variant.Text" Size="Size.Small" Color="Color.Primary"
                           Icon="@MaterialDesignIcons.Normal.ThemeLightDark"
                           OnClick="UserPreferences.ToggleThemeMode" />
            <AuthenticationButtons />
        </MudStack>
        <MudStack Spacing="1" Row="_drawerOpen" AlignItems="AlignItems.Center" Justify="Justify.Center" Class="px-2 pb-2">
            <LoginDisplay Compact="!_drawerOpen" />
        </MudStack>
    </MudStack>
</MudDrawer>

@code {

    /// <summary>
    /// Renders the actions.
    /// </summary>
    /// <param name="actions">Actions to render.</param>
    /// <returns></returns>
    private RenderFragment RenderActions(IEnumerable<ActionConfig> actions) => __builder =>
    {
        @if (actions?.Any() == true)
        {
            @foreach (var action in actions)
            {
                @if (string.IsNullOrEmpty(action.Href))
                {
                    <MudIconButton OnClick="action.OnClick" Icon="@action.Icon" Color="Color.Inherit" Size="Size.Medium" title="@action.Text"></MudIconButton>
                }
                else
                {
                    <MudIconButton Href="@action.Href" Icon="@action.Icon" Color="Color.Inherit" Size="Size.Medium" title="@action.Text"></MudIconButton>
                }
            }
        }
    };

}
